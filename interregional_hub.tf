variable "interregional_interface" {
  type = object({
    name     = string
    local_gw = string
    nat_ip   = string
    }
  )
  default = null
}

variable "interregional_hubs" {
  description = "Set of inter-regional hub objects."
  type = set(object({
    region_name = string
    remote_gw   = string
    bgp_as      = number
    remote_ip   = string
    local_ip    = string
    }
  ))
  default = null
}

locals {
  interregional_hubs = var.interregional_hubs == null ? {} : {
    for hub in var.interregional_hubs : hub.remote_gw => hub
  }
}

resource "fortios_vpnipsec_phase1interface" "interregional_phase1" {
  for_each = local.interregional_hubs

  vdomparam = var.vdom

  name                     = "to-${each.value.region_name}"
  local_gw                 = var.interregional_interface.local_gw == "" ? null : var.interregional_interface.local_gw
  type                     = "static"
  interface                = var.interregional_interface.name
  ike_version              = 2
  peertype                 = "any"
  net_device               = "disable"
  proposal                 = var.ipsec_proposal
  add_route                = "disable"
  dpd                      = "on-idle"
  auto_discovery_sender    = "enable"
  auto_discovery_forwarder = "enable"
  auto_discovery_receiver  = "enable"
  tunnel_search            = "nexthop" # removed in 7.0.x+
  psksecret                = var.ipsec_psk
  dpd_retryinterval        = 5
  remote_gw                = each.value.remote_gw
}

resource "fortios_vpnipsec_phase2interface" "interregional_phase2" {
  for_each = local.interregional_hubs

  vdomparam = var.vdom

  name       = fortios_vpnipsec_phase1interface.interregional_phase1[each.key].name
  phase1name = fortios_vpnipsec_phase1interface.interregional_phase1[each.key].name
  proposal   = fortios_vpnipsec_phase1interface.interregional_phase1[each.key].proposal
  pfs        = "enable"
  dhgrp      = var.ipsec_dhgrp
}

resource "fortios_system_interface" "interregional_vpn_interface" {
  for_each = local.interregional_hubs

  autogenerated = "auto"

  description = "Managed by Terraform."
  ip          = each.value.local_ip
  name        = fortios_vpnipsec_phase1interface.interregional_phase1[each.key].name
  remote_ip   = each.value.remote_ip
  allowaccess = "ping"
  vdom        = var.vdom
}

resource "fortios_routerbgp_neighbor" "interregional_neighbor" {
  for_each = local.interregional_hubs

  vdomparam = var.vdom

  ip                          = split("/", fortios_system_interface.interregional_vpn_interface[each.key].remote_ip)[0]
  remote_as                   = each.value.bgp_as
  attribute_unchanged         = "next-hop"
  ebgp_enforce_multihop       = "enable"
  update_source               = fortios_system_interface.interregional_vpn_interface[each.key].name
  soft_reconfiguration        = "enable"
  capability_graceful_restart = "enable"
  next_hop_self               = "disable"
}

# resource "fortios_routerospf_ospfinterface" "interregional_neighbor" {
#   for_each = local.interregional_hubs

#   vdomparam = var.vdom

#   interface = fortios_system_interface.interregional_vpn_interface[each.key].name
#   ip = split("/", fortios_system_interface.interregional_vpn_interface[each.key].remote_ip)[0]
#   name = fortios_system_interface.interregional_vpn_interface[each.key].name
# }